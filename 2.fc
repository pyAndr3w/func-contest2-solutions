{-
  TASK 2 - Merge hashmaps (dictionaries)
  Write the method that merges two hashmaps into one. When keys of hashmaps
  interesect - values from first hashmap should be used, while discarded
  key/value pairs should be stored into separate hashmap.
  Method should return two hashmaps (merged_dict, discared_dict). If any
  of resulting hashmaps is empty it should be represented by `null` value.
  Hashmap key length is 256 bit. Each hashmap has at most 256 elements.
-}

() recv_internal() {
}


;; testable
(cell, cell) merge_hashmaps(cell dict1, cell dict2) method_id {
  cell merged_dict = dict2;
  cell discared_dict = new_dict();
  int f = -1;
  int key = -1;
  do {
    (key, var record, f) = dict1.udict_get_next?(256, key);
    if (f) {
      (slice r, int f1) = merged_dict~udict_delete_get?(256, key);
      if f1 { discared_dict~udict_set(256, key, r); }
      merged_dict~udict_set(256, key, record);
    }
  } until (~ f);
  return (merged_dict.dict_empty?() ? null() : merged_dict, discared_dict.dict_empty?() ? null() : discared_dict);
}
